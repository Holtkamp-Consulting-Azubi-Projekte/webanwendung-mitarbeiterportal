version: '3.8'

services:
  backend:
    build: ./backend
    container_name: mitarbeiterportal-backend
    ports:
      - "5050:5050"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    depends_on:
      - db
    environment:
    - FLASK_ENV=production
    - DATABASE_URL=postgresql://admin:secret@db:5432/mitarbeiterportal
    - DB_HOST=db
    - DB_NAME=mitarbeiterportal
    - DB_USER=admin
    - DB_PASSWORD=secret
    networks:
      - mitarbeiterportal-network
    restart: always

  frontend:
    build: ./frontend
    container_name: mitarbeiterportal-frontend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
    networks:
      - mitarbeiterportal-network
    restart: always

  nginx:
    image: nginx:latest
    container_name: mitarbeiterportal-nginx
    ports:
      - "3001:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mitarbeiterportal-network
    restart: always

  db:
    image: postgres:15
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: mitarbeiterportal
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mitarbeiterportal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d mitarbeiterportal"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

networks:
  mitarbeiterportal-network:
    driver: bridge

volumes:
  postgres-data:
  frontend_node_modules:
  backend_node_modules: